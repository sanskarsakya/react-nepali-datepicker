export const getDaysInMonthMap = () => {
  const daysInMonthMap = new Map();
  /*
           The 0s at index 0 are dummy values so as to make the int array of
           days in months seems more intuitive that index 1 refers to first
           month "Baisakh", index 2 refers to second month "Jesth" and so on.
           */

  /*  INFO
   *  this is a dummy data, last month value is an educated guess but other are dummy,
   *  do not rely on this and its of no use except to prevent null
   *  don't believe the values of year 1969
   *  however it does not effect the conversion
   */

  daysInMonthMap.set(
    1969,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 31, 366],
  );

  /*
   *  below dates are based on
   *  based on https://github.com/bahadurbaniya/Date-Converter-Bikram-Sambat-to-English-Date/blob/master/src/main/java/np/com/converter/date/nepali/Lookup.java
   */
  daysInMonthMap.set(
    1970,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1971,
    [0, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1972,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    1973,
    [0, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    1974,
    [0, 30, 32, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1975,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1976,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    1977,
    [0, 30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    1978,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1979,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1980,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    1981,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1982,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1983,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1984,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    1985,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1986,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1987,
    [0, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1988,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    1989,
    [0, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1990,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1991,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1992,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
  );
  daysInMonthMap.set(
    1993,
    [0, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1994,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1995,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1996,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
  );
  daysInMonthMap.set(
    1997,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1998,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    1999,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2000,
    [0, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    2001,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2002,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2003,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2004,
    [0, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    2005,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2006,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2007,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2008,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31, 365],
  );
  daysInMonthMap.set(
    2009,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2010,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2011,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2012,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2013,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2014,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2015,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2016,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2017,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2018,
    [0, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2019,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
  );
  daysInMonthMap.set(
    2020,
    [0, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2021,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2022,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2023,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
  );
  daysInMonthMap.set(
    2024,
    [0, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2025,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2026,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2027,
    [0, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    2028,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2029,
    [0, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2030,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2031,
    [0, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    2032,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2033,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2034,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2035,
    [0, 30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31, 365],
  );
  daysInMonthMap.set(
    2036,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2037,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2038,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2039,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2040,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2041,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2042,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2043,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2044,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2045,
    [0, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2046,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2047,
    [0, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2048,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2049,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2050,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
  );
  daysInMonthMap.set(
    2051,
    [0, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2052,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2053,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2054,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
  );
  daysInMonthMap.set(
    2055,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2056,
    [0, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2057,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2058,
    [0, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    2059,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2060,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2061,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2062,
    [0, 30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    2063,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2064,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2065,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2066,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31, 365],
  );
  daysInMonthMap.set(
    2067,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2068,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2069,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2070,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2071,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2072,
    [0, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2073,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2074,
    [0, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2075,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2076,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2077,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
  );
  daysInMonthMap.set(
    2078,
    [0, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2079,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2080,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2081,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
  );
  daysInMonthMap.set(
    2082,
    [0, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2083,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2084,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2085,
    [0, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    2086,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2087,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2088,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2089,
    [0, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
  );
  daysInMonthMap.set(
    2090,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2091,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2092,
    [0, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
  );
  daysInMonthMap.set(
    2093,
    [0, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31, 365],
  );
  daysInMonthMap.set(
    2094,
    [0, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
  );
  daysInMonthMap.set(
    2095,
    [0, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
  );

  return daysInMonthMap;
};

// const updateWithYearDayCount = (mapSet) => {
//   for (const [year, days] of mapSet) {
//     const yearDayCount = days.reduce((acc, val) => acc + val);
//     let newDays = days.concat(yearDayCount)
//     mapSet.set(year, newDays);
//   }
// };
